const { sequelize } = require('./src/models');

async function migrateCapacidade() {
  try {
    console.log('üîÑ Iniciando migra√ß√£o de capacidade de vagas...');
    
    // Verificar se as colunas j√° existem
    const tableInfo = await sequelize.query(
      "PRAGMA table_info(vagas)",
      { type: sequelize.QueryTypes.SELECT }
    );
    
    const existingColumns = tableInfo.map(col => col.name);
    console.log('Colunas existentes em vagas:', existingColumns);
    
    // Adicionar coluna capacidadeVagas se n√£o existir
    if (!existingColumns.includes('capacidadeVagas')) {
      console.log('üìù Adicionando coluna capacidadeVagas...');
      await sequelize.query(`
        ALTER TABLE vagas 
        ADD COLUMN capacidadeVagas INTEGER DEFAULT 1
      `);
      console.log('‚úÖ Coluna capacidadeVagas adicionada!');
    } else {
      console.log('‚ÑπÔ∏è Coluna capacidadeVagas j√° existe');
    }
    
    // Adicionar coluna statusCapacidade se n√£o existir
    if (!existingColumns.includes('statusCapacidade')) {
      console.log('üìù Adicionando coluna statusCapacidade...');
      await sequelize.query(`
        ALTER TABLE vagas 
        ADD COLUMN statusCapacidade TEXT DEFAULT 'aberta'
      `);
      console.log('‚úÖ Coluna statusCapacidade adicionada!');
    } else {
      console.log('‚ÑπÔ∏è Coluna statusCapacidade j√° existe');
    }
    
    // Atualizar vagas existentes para ter capacidade padr√£o
    console.log('üîÑ Atualizando vagas existentes...');
    
    // Primeiro, verificar se h√° vagas sem os novos campos
    const vagasParaAtualizar = await sequelize.query(`
      SELECT COUNT(*) as total FROM vagas 
      WHERE capacidadeVagas IS NULL OR statusCapacidade IS NULL
    `, { type: sequelize.QueryTypes.SELECT });
    
    console.log(`Vagas que precisam ser atualizadas: ${vagasParaAtualizar[0].total}`);
    
    if (vagasParaAtualizar[0].total > 0) {
      await sequelize.query(`
        UPDATE vagas 
        SET capacidadeVagas = 1, statusCapacidade = 'aberta' 
        WHERE capacidadeVagas IS NULL OR statusCapacidade IS NULL
      `);
      console.log('‚úÖ Vagas existentes atualizadas!');
    } else {
      console.log('‚ÑπÔ∏è Todas as vagas j√° est√£o atualizadas');
    }
    
    console.log('\n‚úÖ Migra√ß√£o de capacidade conclu√≠da com sucesso!');
    
  } catch (error) {
    console.error('‚ùå Erro na migra√ß√£o:', error);
    console.error('Stack trace:', error.stack);
  } finally {
    await sequelize.close();
  }
}

// Executar migra√ß√£o
migrateCapacidade(); 